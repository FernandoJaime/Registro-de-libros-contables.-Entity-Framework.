// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modelo;

#nullable disable

namespace Modelo.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20231107215441_tercera")]
    partial class tercera
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entidades.Asiento", b =>
                {
                    b.Property<int>("AsientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsientoId"));

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<int>("ConceptoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("LibroContableId")
                        .HasColumnType("int");

                    b.Property<int>("Monto")
                        .HasColumnType("int");

                    b.Property<int>("TipoAsiento")
                        .HasColumnType("int");

                    b.HasKey("AsientoId");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("ConceptoId");

                    b.HasIndex("LibroContableId");

                    b.ToTable("Asientos", (string)null);

                    b.HasData(
                        new
                        {
                            AsientoId = 1,
                            Codigo = 1,
                            ConceptoId = 1,
                            Fecha = new DateTime(2021, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LibroContableId = 1,
                            Monto = 1000,
                            TipoAsiento = 0
                        },
                        new
                        {
                            AsientoId = 2,
                            Codigo = 2,
                            ConceptoId = 2,
                            Fecha = new DateTime(2021, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LibroContableId = 1,
                            Monto = 2000,
                            TipoAsiento = 1
                        });
                });

            modelBuilder.Entity("Entidades.Concepto", b =>
                {
                    b.Property<int>("ConceptoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConceptoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ConceptoId");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Conceptos", (string)null);

                    b.HasData(
                        new
                        {
                            ConceptoId = 1,
                            Descripcion = "Compra de insumos para la elaboracion de los platos",
                            Nombre = "Compra de insumos"
                        },
                        new
                        {
                            ConceptoId = 2,
                            Descripcion = "Venta de insumos para la elaboracion de los platos",
                            Nombre = "Venta de insumos"
                        },
                        new
                        {
                            ConceptoId = 3,
                            Descripcion = "",
                            Nombre = "Depreciación de activos fijos"
                        },
                        new
                        {
                            ConceptoId = 4,
                            Descripcion = "",
                            Nombre = "Pago de intereses"
                        },
                        new
                        {
                            ConceptoId = 5,
                            Descripcion = "",
                            Nombre = "Venta de productos terminados"
                        });
                });

            modelBuilder.Entity("Entidades.LibroContable", b =>
                {
                    b.Property<int>("LibroContableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LibroContableId"));

                    b.Property<int>("CapitalActual")
                        .HasColumnType("int");

                    b.Property<DateTime>("MesYear")
                        .HasColumnType("datetime2");

                    b.HasKey("LibroContableId");

                    b.HasIndex("MesYear")
                        .IsUnique();

                    b.ToTable("LibrosContables", (string)null);

                    b.HasData(
                        new
                        {
                            LibroContableId = 1,
                            CapitalActual = 10000,
                            MesYear = new DateTime(2021, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Entidades.Asiento", b =>
                {
                    b.HasOne("Entidades.Concepto", "Concepto")
                        .WithMany()
                        .HasForeignKey("ConceptoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.LibroContable", "LibroContable")
                        .WithMany("Asientos")
                        .HasForeignKey("LibroContableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concepto");

                    b.Navigation("LibroContable");
                });

            modelBuilder.Entity("Entidades.LibroContable", b =>
                {
                    b.Navigation("Asientos");
                });
#pragma warning restore 612, 618
        }
    }
}
